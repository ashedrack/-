name: DevSecOps Pipeline

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  # Job for unit tests and code scans
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 14

    - name: Install dependencies
      run: npm install

    - name: Run code scans
      uses: github/codeql-action/init@v2
      with:
        languages: 'javascript'

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  # Job for building, scanning, and pushing Docker images
  build-and-push-image:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build Docker image
      run: |
        docker build -t my-app:latest .
        echo "${{ secrets.AWS_ACCESS_KEY_ID }}" | docker login --username AWS --password-stdin 179079437960.dkr.ecr.us-east-1.amazonaws.com
        docker tag my-app:latest 179079437960.dkr.ecr.us-east-1.amazonaws.com/my-app:latest
        docker push 179079437960.dkr.ecr.us-east-1.amazonaws.com/my-app:latest

    - name: Run Trivy security scan
      uses: aquasecurity/trivy-action@v0.7.0
      with:
        image-ref: 179079437960.dkr.ecr.us-east-1.amazonaws.com/my-app:latest

  # Job for deploying to EKS
  deploy-to-eks:
    runs-on: ubuntu-latest
    needs: build-and-push-image

    steps:
    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --region us-east-1 --name <cluster-name>

    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl rollout status deployment/my-app

  # Notifications job
  notify:
    runs-on: ubuntu-latest
    needs: deploy-to-eks

    steps:
    - name: Send Slack notification
      uses: rtCamp/action-slack-notify@v2
      with:
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        message: "Deployment successful for my-app"

    - name: Send email notification
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: Deployment Successful
        body: Deployment of my-app is complete.
        to: dozie.aji@gmail.com
        from: test@gmail.com
